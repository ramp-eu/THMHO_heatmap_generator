<?xml version="1.0" encoding="UTF-8" ?>
<launch>
        <arg name="sim" default="false" />
        <arg name="debug" default="false" />
        <arg name="gui" default="true" />
        <arg name="pause" default="false" />
        <arg name="world" default="$(find factory_sim)/world/factory.world" />

        <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
        <arg name="x_pos" default="0.0"/>
        <arg name="y_pos" default="1.0"/>
        <arg name="z_pos" default="0.0"/>

        <arg name="sim_map_file" default="$(find factory_sim)/maps/map.yaml"/>
        <arg name="real_map_file" default="$(find factory_sim)/maps/lowres_map.yaml"/>

        <group if="$(arg sim)">
                <!-- include gazebo_ros launcher -->
                <include file="$(find gazebo_ros)/launch/empty_world.launch">
                        <arg name="world_name" value="$(arg world)" />
                        <arg name="debug" value="$(arg debug)" />
                        <arg name="gui" value="$(arg gui)" />
                        <arg name="paused" value="$(arg pause)" />
                        <arg name="use_sim_time" value="true" />
                </include>

                <!--Sensor Description from URDF-->
                <group ns="sensors">
                        <param name="sensor_description" command="$(find xacro)/xacro $(find factory_sim)/urdf/lab.xacro"/>
                        <param name="use_gui" value="true"/>
                        <node name="spawn_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param sensor_description -model lab_model" output="screen"/>
                        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
                                <remap from="robot_description" to="sensor_description" />
                        </node>
                </group>

                <!-- <group ns="robot"> -->
                <param name="robot_description" command="$(find xacro)/xacro $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />
                <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf" args="-urdf -model turtlebot3_$(arg model) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />
                <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
                <include file="$(find turtlebot3_navigation)/launch/amcl.launch" >
                      <arg name="initial_pose_x" value="$(arg x_pos) "/>
                      <arg name="initial_pose_y" value="$(arg y_pos) "/>
                      <arg name="initial_pose_a" value="$(arg z_pos) "/>
                </include>
                <!-- </group> -->



                <!-- Map server -->
                <node pkg="map_server" name="map_server" type="map_server" args="$(arg sim_map_file)"/>

                <node name="costmap_generator" pkg="factory_sim" type="costmap_generator" output="screen">
                        <rosparam file="$(find factory_sim)/config/costmap_params_sim.yaml" command="load" ns="costmap/obstacles" />
                </node>
        </group>
        <group unless="$(arg sim)">
                <node name="costmap_generator" pkg="factory_sim" type="costmap_generator" output="screen">
                        <rosparam file="$(find factory_sim)/config/costmap_params.yaml" command="load" ns="costmap/obstacles" />
                </node>
                <!-- Map server -->
                <node pkg="map_server" name="map_server" type="map_server" args="$(arg real_map_file)"/>
        </group>

        <node name="heatmap_generator" pkg="factory_sim" type="heatmap_generator" output="screen">
                <param name="aggregation_time" value="3600" />
        </node>

        <node pkg="tf" type="static_transform_publisher" name="sensor_link_broadcaster" args="0 0 0 0 0 0 world map 100" />
        <node pkg="rviz" type="rviz" name="rviz" required="true"
                args="-d $(find factory_sim)/rviz/costmap.rviz"/>
</launch>
